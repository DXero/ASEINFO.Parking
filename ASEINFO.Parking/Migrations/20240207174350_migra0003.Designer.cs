// <auto-generated />
using System;
using ASEINFO.Parking;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASEINFO.Parking.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240207174350_migra0003")]
    partial class migra0003
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ASEINFO.Parking.Models.Estancia", b =>
                {
                    b.Property<int>("EstanciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstanciaId"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Entrada")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Salida")
                        .HasColumnType("datetime");

                    b.Property<string>("VehiculoId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("EstanciaId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("Estancias");
                });

            modelBuilder.Entity("ASEINFO.Parking.Models.TipoVehiculo", b =>
                {
                    b.Property<int>("TipoVehiculoId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("money");

                    b.HasKey("TipoVehiculoId");

                    b.ToTable("TiposVehiculos");

                    b.HasData(
                        new
                        {
                            TipoVehiculoId = 1,
                            Descripcion = "NO RESIDENTES",
                            Precio = 0.5m
                        },
                        new
                        {
                            TipoVehiculoId = 2,
                            Descripcion = "RESIDENTES",
                            Precio = 0.05m
                        },
                        new
                        {
                            TipoVehiculoId = 3,
                            Descripcion = "VEHICULOS OFICIALES"
                        });
                });

            modelBuilder.Entity("ASEINFO.Parking.Models.Vehiculo", b =>
                {
                    b.Property<string>("VehiculoId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TipoVehiculoId")
                        .HasColumnType("int");

                    b.HasKey("VehiculoId");

                    b.HasIndex("TipoVehiculoId");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("ASEINFO.Parking.Models.Estancia", b =>
                {
                    b.HasOne("ASEINFO.Parking.Models.Vehiculo", "Vehiculo")
                        .WithMany("Estancias")
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("ASEINFO.Parking.Models.Vehiculo", b =>
                {
                    b.HasOne("ASEINFO.Parking.Models.TipoVehiculo", "TipoVehiculo")
                        .WithMany("Vehiculos")
                        .HasForeignKey("TipoVehiculoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("TipoVehiculo");
                });

            modelBuilder.Entity("ASEINFO.Parking.Models.TipoVehiculo", b =>
                {
                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("ASEINFO.Parking.Models.Vehiculo", b =>
                {
                    b.Navigation("Estancias");
                });
#pragma warning restore 612, 618
        }
    }
}
